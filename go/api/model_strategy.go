/*
ModernTrader-Go

ModernTrader-Go

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Strategy struct for Strategy
type Strategy struct {
	// Unique identifier for the article
	StrategyId *string `json:"strategyId,omitempty"`
	// Unique identifier for the article
	UserId *string `json:"userId,omitempty"`
	// Unique identifier for the article
	BrokerAccountId *string `json:"brokerAccountId,omitempty"`
	Tags []string `json:"tags,omitempty"`
}

// NewStrategy instantiates a new Strategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStrategy() *Strategy {
	this := Strategy{}
	return &this
}

// NewStrategyWithDefaults instantiates a new Strategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStrategyWithDefaults() *Strategy {
	this := Strategy{}
	return &this
}

// GetStrategyId returns the StrategyId field value if set, zero value otherwise.
func (o *Strategy) GetStrategyId() string {
	if o == nil || o.StrategyId == nil {
		var ret string
		return ret
	}
	return *o.StrategyId
}

// GetStrategyIdOk returns a tuple with the StrategyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Strategy) GetStrategyIdOk() (*string, bool) {
	if o == nil || o.StrategyId == nil {
		return nil, false
	}
	return o.StrategyId, true
}

// HasStrategyId returns a boolean if a field has been set.
func (o *Strategy) HasStrategyId() bool {
	if o != nil && o.StrategyId != nil {
		return true
	}

	return false
}

// SetStrategyId gets a reference to the given string and assigns it to the StrategyId field.
func (o *Strategy) SetStrategyId(v string) {
	o.StrategyId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *Strategy) GetUserId() string {
	if o == nil || o.UserId == nil {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Strategy) GetUserIdOk() (*string, bool) {
	if o == nil || o.UserId == nil {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *Strategy) HasUserId() bool {
	if o != nil && o.UserId != nil {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *Strategy) SetUserId(v string) {
	o.UserId = &v
}

// GetBrokerAccountId returns the BrokerAccountId field value if set, zero value otherwise.
func (o *Strategy) GetBrokerAccountId() string {
	if o == nil || o.BrokerAccountId == nil {
		var ret string
		return ret
	}
	return *o.BrokerAccountId
}

// GetBrokerAccountIdOk returns a tuple with the BrokerAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Strategy) GetBrokerAccountIdOk() (*string, bool) {
	if o == nil || o.BrokerAccountId == nil {
		return nil, false
	}
	return o.BrokerAccountId, true
}

// HasBrokerAccountId returns a boolean if a field has been set.
func (o *Strategy) HasBrokerAccountId() bool {
	if o != nil && o.BrokerAccountId != nil {
		return true
	}

	return false
}

// SetBrokerAccountId gets a reference to the given string and assigns it to the BrokerAccountId field.
func (o *Strategy) SetBrokerAccountId(v string) {
	o.BrokerAccountId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Strategy) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Strategy) GetTagsOk() ([]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Strategy) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Strategy) SetTags(v []string) {
	o.Tags = v
}

func (o Strategy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StrategyId != nil {
		toSerialize["strategyId"] = o.StrategyId
	}
	if o.UserId != nil {
		toSerialize["userId"] = o.UserId
	}
	if o.BrokerAccountId != nil {
		toSerialize["brokerAccountId"] = o.BrokerAccountId
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableStrategy struct {
	value *Strategy
	isSet bool
}

func (v NullableStrategy) Get() *Strategy {
	return v.value
}

func (v *NullableStrategy) Set(val *Strategy) {
	v.value = val
	v.isSet = true
}

func (v NullableStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStrategy(val *Strategy) *NullableStrategy {
	return &NullableStrategy{value: val, isSet: true}
}

func (v NullableStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


